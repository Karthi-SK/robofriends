{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","robot","fetch","then","response","json","users","filteredrobots","filter","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAmBeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE3B,OACE,sBAAKC,UAAU,oDAAf,UACE,qBAAKC,IAAG,+BAA2BF,EAA3B,iBAA+CG,IAAI,gBAC3D,gCACE,6BAAML,IACN,4BAAKC,WCWEK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIlB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCEAC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACAA,UAAU,kCACVU,KAAK,SACLC,YAAY,qBACZC,SAAUH,OCEDI,EATA,SAACC,GAEd,OACE,qBAAKC,MAAO,CAAEC,SAAU,OAAQC,OAAQ,iBAAkBC,OAAQ,SAAlE,SACIJ,EAAMK,YCgBCC,E,kDAnBb,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHI,E,8DAOAC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAW,M,+BAI3B,OAAGG,KAAKJ,MAAMC,SACL,wDAEFG,KAAKX,MAAMK,a,GAhBKQ,aC+CZC,G,wDAxCb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAf1C,EAAKZ,MAAQ,CACXa,MAAO,GACPH,YAAa,IAJH,E,gEAQM,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKb,SAAS,CAAEQ,MAAOK,S,+BAQjB,IAAD,EACwBd,KAAKJ,MAA5Ba,EADD,EACCA,MAAOH,EADR,EACQA,YACTS,EAAiBN,EAAMO,QAAO,SAAAP,GAClC,OAAOA,EAAMrC,KAAK6C,cAAcC,SAASZ,EAAYW,kBAGvD,OAAwB,IAAjBR,EAAMU,OACX,4CACA,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,WAAd,0BACA,cAAC,EAAD,CAAWS,aAAiBgB,KAAKI,iBACjC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAWoC,e,GAnCfK,IAAMlB,YCKTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.39b06724.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// const Card = ({name, email, id}) => {     ---  Can also be used in line 5\r\n// const { name, email, id } = props;     --- Can also be used in line 7\r\n// In above usages there should be no props.name, it should be name\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\r\n  return(\r\n    <div className=\"tc bg-light-red dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={ `https://robohash.org/${id}?size=200x200` } alt=\"! Not found\"></img>\r\n      <div>\r\n        <h4>{ name }</h4>\r\n        <p>{ email }</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  // if(true) {\r\n  //   throw new Error(\"I've a Error\");\r\n  // }\r\n  return(\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return(\r\n          <Card\r\n          key={i}\r\n          id={robots[i].id}\r\n          name={robots[i].name}\r\n          email={robots[i].email}\r\n          />);\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return(\r\n    <div className=\"pa2\">\r\n      <input\r\n      className=\"pa3 ba b--cyan bg-lightest-blue\"\r\n      type=\"search\"\r\n      placeholder=\"Search_Robots_here\"\r\n      onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  // return props.children             -          returning child component (CardList)\r\n  return(\r\n    <div style={{ overflow: 'auto', border: '2px solid cyan', height: '750px' }}>\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError : true })\r\n  }\r\n\r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <h1>Oooops...It has Error!</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robot: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => {\r\n      this.setState({ robot: users })\r\n    })\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { robot, searchfield } = this.state;\r\n    const filteredrobots = robot.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    });\r\n\r\n    return robot.length === 0 ?\r\n      <h1>Loading...</h1> :\r\n      <div className=\"tc\">\r\n        <h1 className=\"f2 fw9 i\">Robo Friends</h1>\r\n        <SearchBox searchChange = { this.onSearchChange }/>\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots = { filteredrobots }/>\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}